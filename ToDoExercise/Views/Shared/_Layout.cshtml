<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-vue/2.21.2/bootstrap-vue.min.js" integrity="sha512-Z0dNfC81uEXC2iTTXtE0rM18I3ATkwn1m8Lxe0onw/uPEEkCmVZd+H8GTeYGkAZv50yvoSR5N3hoy/Do2hNSkw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js" integrity="sha512-zYXldzJsDrNKV+odAwFYiDXV2Cy37cwizT+NkuiPGsa9X1dOz04eHvUWVuxaJ299GvcJT31ug2zO4itXBjFx4w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link href="~/Content/cssStyles.css" rel="stylesheet" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>


    <div class="container body-content">
        @RenderBody()
    </div>

    <footer>

        <script>
            Vue.component('modalComponent', {
                data() {
                    return {
                        modalTitleData: this.mTitle,
                        modalDescriptionData: this.mDescription,
                        modalNameData: this.mName,
                        modalIdData: this.mId,
                    }
                },
                props: ["m-title", "m-description", "m-name", "m-id"],
                template: "#modalTemplate",
                methods: {
                    saveContent() {

                        this.$forceUpdate()
                        this.$emit('savecontent', this.modalTitleData, this.modalDescriptionData, this.modalNameData, this.mId)

                    }
                },
                watch: {
                    mId(val, oldVal) {
                        if (val !== oldVal) { modalIdData = val }
                    }
                }
            })

            Vue.component('liTask', {
                props: ["p-forms"],
                template: "#liTaskCardTemplate",
                methods: {
                    deleteElement() {
                        this.$emit('deleteelement', this.pId)
                    },
                    childUpdate(title, description, name, id) {
                        this.$emit('parentupdate', title, description, name, id)
                    }
                },
            })

            var vm = new Vue({
                el: "#app",
                data() {
                    return {
                        forms: [],
                        counter: 0,
                        modalInput: {
                            title: "", description: "", name: "", id: ""
                        },
                    }
                },

                methods: {

                    createCard() {
                        this.forms.push(this.createEmptyCardObject())
                        this.saveLocal();
                    },
                    parentDelete(id) {
                        this.forms.splice(this.getIndexFromId(id), 1)
                        this.saveLocal();
                    },
                    parentUpdate(title, description, name, id) {
                        this.forms.splice(this.getIndexFromId(id), 1, this.editFormById(title, description, name, id))
                        this.saveLocal();
                    },



                    saveLocal() {
                        window.localStorage.setItem('forms', JSON.stringify(this.forms))
                        window.localStorage.setItem('counter', this.counter)
                    },
                    getLocal() {
                        return JSON.parse(window.localStorage.getItem('forms'))
                    },
                    getIndexFromId(identificator) {
                        return this.forms.indexOf(this.forms.find(e => e.id == identificator))
                    },
                    createEmptyCardObject() {
                        return { title: "", description: "", name: "", id: `${this.counter}`, date: `${this.getLocalDate()}` }
                        this.incrementCounter()
                        this.saveLocal();
                    },
                    incrementCounter() {
                        this.counter++
                    },
                    editFormById(title, description, name, id) {
                        var res = this.forms.find(e => e.id == id)
                        res.title = title
                        res.description = description
                        res.name = name
                        return res
                    },
                    getLocalDate() {
                        return new Date();
                    },
                    loadLocalData() {
                        if (window.localStorage.getItem('forms')) {
                            this.forms = JSON.parse(window.localStorage.getItem('forms'))
                            this.counter = window.localStorage.getItem('counter')
                        }
                    },
                    printSomething() {
                        console.log("your call is working")
                    }
                },
                mounted() {
                    this.loadLocalData();
                }
            })
        </script>
    </footer>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

</body>

</html>
