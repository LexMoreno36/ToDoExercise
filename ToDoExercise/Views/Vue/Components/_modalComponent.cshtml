
<script type="text/x-template" id="modalTemplate">
    <div class="modal fade" :id="id" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" style="width:400px" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title" id="exampleModalLabel">Editar Tarea</h2>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label class="col-form-label">Title</label>
                            <input type="text" class="form-control" style="max-width:none" v-model="modalComputed.title">
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Task description</label>
                            <textarea class="form-control" name="description" rows="3" style="max-width:none" v-model="modalComputed.description"></textarea>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Name</label>
                            <input type="text" class="form-control" style="max-width:none" v-model="modalComputed.name">
                        </div>
                    </form>
                </div>
                <div class="modal-footer separated-buttons">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" v-on:click="exitWithoutSaving">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</script>

<script>

    var modalcomponent = Vue.component("modalcomponent", {
        props: {
            task: {
                type: Object,
                required: true,
            },
            id: {}

        },
        template: "#modalTemplate",
        methods: {
            exitWithoutSaving() {
                this.$emit('exitwithoutsaving', this.id)
            }
        },
        computed: {
            modalComputed: {
                get() { return this.task },
            }
        },

        //***************    se queda observando las props del modal (al abrir un modal de otro id, las props cambian)    ****************

        watch: {
            modalComputed: {
                deep: true,
                handler(newVal) {
                    newVal.id = this.id
                    this.$emit('savecontent', newVal)
                    console.log(newVal)
                }
            }
        }
    })
</script>