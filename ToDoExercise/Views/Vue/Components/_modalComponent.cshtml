<script type="text/x-template" id="modalTemplate">
        <div class="modal fade" :id="modal.id" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" style="width:400px" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title" id="exampleModalLabel">Editar Tarea</h2>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="form-group">
                                <label class="col-form-label">Title</label>
                                <input type="text" class="form-control" style="max-width:none" v-model="modal.title">
                            </div>
                            <div class="form-group">
                                <label class="col-form-label">Task description</label>
                                <textarea class="form-control" name="description" rows="3" style="max-width:none" v-model="modal.description"></textarea>
                            </div>
                            <div class="form-group">
                                <label class="col-form-label">Name</label>
                                <input type="text" class="form-control" style="max-width:none" v-model="modal.name">
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer separated-buttons">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" data-dismiss="modal" v-on:click="saveContent">Save Task</button>
                    </div>
                </div>
            </div>
        </div>
</script>

<script>
    var modalcomponent = Vue.component("modalcomponent",{
        data() {
            return {
                modal: {
                    title: this.title,
                    description: this.description,
                    name: this.name,
                    id: this.id,
                }
            }
        },
        props: ["title", "description", "name", "id",],
        template: "#modalTemplate",
        methods: {
            saveContent() {
                this.$forceUpdate()
                this.$emit('savecontent', this.modal)
            }
        },

        //***************    se queda observando las props del modal (al abrir un modal de otro id, las props cambian)    ****************

        watch: {
            $props: {
                deep: true,
                handler(val) {
                    this.modal = Object.assign({}, this.modal, val)
                    //en este caso no podemos hacer this.modal = val, ya que se pierden las referencias y nos devolvería un error
                    //this.modal = val
                }
            },

        }
    })
</script>